# Importing the libraries
import numpy as np
import pandas as pd

# Importing the dataset
dataset = pd.read_csv('data.csv')
dataset['dma_1'] = dataset['close'].rolling(window=1, min_periods=1).mean()
dataset['dma_2'] = dataset['close'].rolling(window=2, min_periods=1).mean()
dataset['dma_3'] = dataset['close'].rolling(window=3, min_periods=1).mean()
dataset['dma_4'] = dataset['close'].rolling(window=4, min_periods=1).mean()
dataset['dma_5'] = dataset['close'].rolling(window=5, min_periods=1).mean()

dataset['next_close'] = dataset['close'].shift(-1)
dataset = dataset[:-1]
dataset['diff'] = dataset['next_close'] - dataset['close']
dataset['output'] = dataset['diff'].apply(lambda x: 0 if x <0 else 1)

dataset['dma_diff_1'] = dataset['close'] - dataset['dma_4']
dataset['dma_diff_2'] = dataset['close'] - dataset['dma_3']
dataset['dma_diff_3'] = dataset['close'] - dataset['dma_2']
dataset['dma_diff_4'] = dataset['close'] - dataset['dma_1']
dataset['dma_diff_5'] = dataset['close'] - dataset['dma_5']

X = dataset.iloc[:, [13,]].values
y = dataset.iloc[:, 14].values

# Splitting the dataset into the Training set and Test set
from sklearn.cross_validation import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

# Fitting the classifier Model to the dataset
# Random Forest Classifier
from sklearn.ensemble import RandomForestClassifier
classifier = RandomForestClassifier(n_estimators=100, random_state=0)
classifier.fit(X_train, y_train)
# Predicting a new result
y_pred = classifier.predict(X_test)

# Making the Confusion Matrix
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
